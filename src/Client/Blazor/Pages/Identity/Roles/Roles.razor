@page "/identity/roles"
@inject IRoleManager RoleManager
@inject NavigationManager Navigation

<PageTitle>Roles</PageTitle>

<h3>Roles</h3>

<button class="btn btn-primary">Add</button>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var role in roles)
        {
            <tr>
                <td>@role.Id</td>
                <td>@role.Name</td>
                <td>@role.Description</td>
                <td>
                    <button @onclick="@(() => EditRole(@role.Id))" class="btn btn-success">Edit</button>
                    <button @onclick="@(() => DeleteRole(@role.Id))" class="btn btn-danger">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<RoleDto> roles = [];

    protected override async Task OnInitializedAsync()
    {
        var result = await RoleManager.GetAllRoles();
        if (result.IsSuccess)
        {
            roles = result.Value!;
        }
        else
        {
            Console.WriteLine(string.Join("; ", result.Errors));
        }
    }

    void EditRole(Guid roleId) => Navigation.NavigateTo($"/identity/role/{roleId}");
    async Task DeleteRole(Guid roleId) => await RoleManager.DeleteRole(roleId);
}
